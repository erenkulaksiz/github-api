[{"/Users/erenkulaksiz/Documents/workspace/web/react/github-api/src/index.js":"1","/Users/erenkulaksiz/Documents/workspace/web/react/github-api/src/style.js":"2"},{"size":11636,"mtime":1619950878902,"results":"3","hashOfConfig":"4"},{"size":3574,"mtime":1619950918767,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1khxf4o",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/erenkulaksiz/Documents/workspace/web/react/github-api/src/index.js",["11","12","13","14","15","16","17","18","19"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, \n  Button, \n  CircularProgress, \n  Backdrop, \n  Dialog, \n  DialogActions, \n  DialogContent, \n  DialogContentText,\n  TextField,\n  Link,\n  Avatar,\n  Chip,\n  Divider,\n  Paper,\n  colors,\n} from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faCodeBranch, faCalendar, faPencilAlt, faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport axios from 'axios';\nimport './index.css';\n\nimport { useStyles } from './style.js';\n\nconst App = () => {\n  const classes = useStyles();\n  \n  const [username, setUsername] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [isFetched, setFetched] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    name: null,\n    avatarurl: null,\n    following: null,\n    followers: null,\n    location: null,\n    public_repos: null,\n    bio: null,\n    created_at: null,\n    company: null,\n    email: null,\n  });\n  const [errors, setError] = React.useState({\n    msg: '',\n    status: false,\n  });\n  const [allRepos, setAllRepos] = React.useState([]);\n  \n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value); \n  }\n  \n  const handleDialogClose = () => {\n    setError({...errors, status: false});\n  }\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    let gotData = false;\n    \n    // Input null diye mi kontrol et\n    \n    if(username == null || username.length == 0 || username == \"\"){\n      setError({...errors, msg: \"Please enter a valid GitHub username.\", status: true}); \n      setLoading(false);\n      setFetched(false);\n      return;\n    }else{\n      setLoading(true);\n    }\n    \n    try {\n      await axios.get(`https://api.github.com/users/${username}`)\n        .then(response => {\n          console.log(response);\n          setUserData({ ...userData,\n            name: response.data.name ? response.data.name : username,\n            avatarurl: response.data.avatar_url,\n            following: response.data.following,\n            followers: response.data.followers,\n            location: response.data.location,\n            public_repos: response.data.public_repos,\n            bio: response.data.bio,\n            created_at: response.data.created_at,\n            company: response.data.company,\n            email: response.data.email,   \n            login: response.data.login,\n          });\n          gotData = true;\n        })\n        .catch(err => {\n          if (err.response.status === 404) {\n            throw new Error('user-not-found');\n          }else if (err.response.status === 403) {\n            throw new Error('rate-limit');\n          }\n          throw err;\n        });\n    } catch (err) {\n      let error = err;\n      if(error.message == 'user-not-found'){\n        setLoading(false);\n        setFetched(false);\n        setError({...errors, msg: \"Cannot found a user with name \"+username, status: true});\n      }else if(error.message == 'rate-limit'){\n        setLoading(false);\n        setFetched(false);\n        setError({...errors, msg: \"You exceeded GitHub API's rate limit!\", status: true});\n      }\n    }\n    \n    if(gotData){\n      try { \n        await axios.get(`https://api.github.com/users/${username}/repos`)\n          .then(response => { \n            setAllRepos(response.data);\n            setLoading(false);\n            setFetched(true);\n            //console.log(allRepos);\n          })\n          .catch(err => {\n          if (err.response.status === 404) {\n            throw new Error('404');\n          }\n          throw err;\n        })\n      } catch (err) {\n        console.log(err);\n        setError({...errors, msg: \"Cannot fetch repo data!\", status: true});\n        setLoading(false);\n        setFetched(false);\n      }\n    }\n  }\n  \n  let convertToDate = (date) => {\n    let returnDate = new Date(date);\n    returnDate = (\"00\" + (returnDate.getMonth() + 1)).slice(-2) + \"/\" +\n    (\"00\" + returnDate.getDate()).slice(-2) + \"/\" +\n    returnDate.getFullYear() + \" \" +\n    (\"00\" + returnDate.getHours()).slice(-2) + \":\" +\n    (\"00\" + returnDate.getMinutes()).slice(-2) + \":\" +\n    (\"00\" + returnDate.getSeconds()).slice(-2);\n    return returnDate;\n  }\n  \n  return (\n  <div className={classes.wholeContainer}>\n    <Container className={classes.container} fixed>\n          {loading ? <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : \"\"}\n\n          <Dialog\n            open={errors.status}\n            onClose={handleDialogClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {errors.msg}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogClose} color=\"primary\" autoFocus>\n              Okay\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.containerTitle}>\n          Search for GitHub users\n        </div>\n        <div className={classes.containerDesc}>\n          Enter a GitHub user's username and reach his data with this API!\n        </div>\n        <Divider />\n        <div className={classes.containerInput}>\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField \n              id=\"outlined-basic\" \n              label=\"Enter a username...\" \n              className={classes.containerInput__field}\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              onChange={e => handleUsernameChange(e)}\n              error={errors.status}\n              placeholder=\"erenkulaksiz\"\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.containerInput__button}\n              endIcon={<FontAwesomeIcon icon={faSearch} />}>\n              Search\n            </Button>\n          </form>\n        </div>\n        {isFetched ? <> \n          <div className={classes.userDataContainer}>\n            <div className={classes.userDataHeader}>\n              <div className={classes.userDataHeaderAvatar}>\n                <Avatar alt={userData.name} src={userData.avatarurl ? userData.avatarurl : \"\"} className={classes.userDataAvatar} />\n              </div>\n              <div className={classes.userDataHeaderTitle}>\n                <Link href={userData.html_url} target=\"_blank\" color=\"inherit\" style={{ textDecoration: 'none' }}>\n                  {userData.login == \"erenkulaksiz\" ?  <div className={classes.golden}>{userData.name}</div> : userData.name}\n                </Link>\n              </div>\n              <div className={classes.userDataFollowers}>\n                <Chip className={classes.userDataChip}\n                  label={\"Followers: \"+userData.followers}\n                  color=\"primary\"\n                />\n                <Chip className={classes.userDataChip}\n                  label={\"Following: \"+userData.following}\n                  color=\"primary\"\n                />\n                <Chip className={classes.userDataChip}\n                  label={\"Repos: \"+userData.public_repos}\n                  color=\"primary\"\n                />\n              </div>\n            </div>\n          </div>\n          <Divider />\n          <div className={classes.userDataDetails}>\n\n            { \n              userData.bio ? <>\n              <div className={classes.userDataDetailsBioTitle}>\n                Bio\n              </div>\n\n              <div className={classes.userDataBio}>\n                {userData.bio}\n              </div></> : \"\"\n            }\n\n            {userData.location || userData.email || userData.company ? \n              <>\n                <div className={classes.userChips}>\n                  {userData.location ? <Chip className={classes.userDetailsChip} label={\"Location: \"+userData.location}/> : \"\"}\n\n                  {userData.email ? <Chip className={classes.userDetailsChip} label={\"Email: \"+userData.email}/> : \"\"}\n\n                  {userData.company ? <Chip className={classes.userDetailsChip} label={\"Company: \"+userData.company}/> : \"\"}\n                </div>\n              </> : \"\"}\n\n\n              <div className={classes.userDataRepos}>\n                {userData.location || userData.email || userData.company || userData.bio ? <>\n                <Divider className={classes.divider}/>\n                </> : \"\"}\n\n                <div className={classes.repoTitle}>\n                  Repos\n                </div>\n\n                <div className={classes.userRepos}>\n\n                  {console.log(allRepos)}\n\n                  { allRepos.length != 0 ? allRepos.map(function(repo, index){\n                      return <>\n                        <Paper key={index} elevation={0} variant=\"outlined\" className={classes.repoPaper}>\n                          <div className={classes.repoPaperHeader}>\n                            <div className={classes.repoPaperHeaderTitle}>\n                              <div className={classes.repoPaperLeft}>\n                                <Link href={repo.html_url} target=\"_blank\">\n                                  {repo.name}\n                                </Link>\n                              </div>\n                              <div className={classes.repoPaperRight}>\n\n                                {repo.stargazers_count != 0 ? <Chip \n                                  label={repo.stargazers_count}\n                                  icon=<FontAwesomeIcon icon={faStar} />\n                                  className={classes.repoChip}\n                                  size=\"small\"\n                                /> : \"\"}\n\n                                {repo.forks_count != 0 ? <Chip \n                                  label={repo.forks_count}\n                                  icon=<FontAwesomeIcon icon={faCodeBranch} />\n                                  className={classes.repoChip}\n                                  size=\"small\"\n                                /> : \"\"}\n\n                                {<Chip \n                                  label={repo.default_branch}\n                                  icon=<FontAwesomeIcon icon={faCodeBranch} />\n                                  className={classes.repoChipBranch}\n                                  size=\"small\"\n                                />}\n\n                              </div>\n\n                            </div>\n                            <div className={classes.repoPaperDate}>\n                              <FontAwesomeIcon icon={faCalendar} /><div className={classes.repoPaperDateItself}>{convertToDate(repo.created_at)}</div>\n\n                              <FontAwesomeIcon icon={faPencilAlt} className={classes.repoPaperDateItself} /><div className={classes.repoPaperDateItself}>{convertToDate(repo.updated_at)}</div>\n                            </div>\n\n                          </div>\n                          \n                          {repo.description ? <div className={classes.repoPaperDesc}>\n                            {repo.description}\n                          </div> : \"\"}\n                          \n                        </Paper>\n                      </>;\n                    }) : \"No repos found.\"} \n                </div>\n\n              </div>\n\n          </div>\n          </> : \"\"}\n    </Container>\n  </div>\n  );\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('root')\n);\n\n","/Users/erenkulaksiz/Documents/workspace/web/react/github-api/src/style.js",["20"],{"ruleId":"21","severity":1,"message":"22","line":17,"column":3,"nodeType":"23","messageId":"24","endLine":17,"endColumn":9},{"ruleId":"25","severity":1,"message":"26","line":66,"column":44,"nodeType":"27","messageId":"28","endLine":66,"endColumn":46},{"ruleId":"25","severity":1,"message":"26","line":66,"column":61,"nodeType":"27","messageId":"28","endLine":66,"endColumn":63},{"ruleId":"25","severity":1,"message":"26","line":104,"column":24,"nodeType":"27","messageId":"28","endLine":104,"endColumn":26},{"ruleId":"25","severity":1,"message":"26","line":108,"column":30,"nodeType":"27","messageId":"28","endLine":108,"endColumn":32},{"ruleId":"25","severity":1,"message":"26","line":213,"column":35,"nodeType":"27","messageId":"28","endLine":213,"endColumn":37},{"ruleId":"25","severity":1,"message":"29","line":271,"column":37,"nodeType":"27","messageId":"28","endLine":271,"endColumn":39},{"ruleId":"25","severity":1,"message":"29","line":283,"column":56,"nodeType":"27","messageId":"28","endLine":283,"endColumn":58},{"ruleId":"25","severity":1,"message":"29","line":290,"column":51,"nodeType":"27","messageId":"28","endLine":290,"endColumn":53},{"ruleId":"21","severity":1,"message":"30","line":4,"column":7,"nodeType":"23","messageId":"24","endLine":4,"endColumn":12},"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'theme' is assigned a value but never used."]